**Content**

## Relational Databases

A relational database is one that stores data in tables. The relationship between each data point is clear and searching through those relationships is relatively easy. The relationship between tables and field types is called a **schema**. For relational databases, the schema must be clearly defined. Let’s look at an example:

![](media/9a67fb53a989073b4f498a3da4934029.png)

Here we see three tables all providing unique information on a specific dog. A relational database user can then obtain a view of the database to fit their needs. For example, I might want to view or report on all dogs over 100 pounds. Or you may wish to see which breeds eat dry food. Relational databases make answering questions like these relatively easy.

Relational databases are also called **SQL databases**. SQL stands for Structured Query Language and it’s the language relational databases are written in. SQL is used to execute queries, retrieve data, and edit data by updating, deleting, or creating new records.

**Popular Relational/SQL Databases**

**SQL Server**

![](media/f105c9b59073b15d2376435a8f174be7.png)

[SQL Server](https://www.microsoft.com/en-us/sql-server/default.aspx) is a relational database management system developed Microsoft. They offer multiple editions with varying features to target different users.

### MySQL

![](media/840049158c3c36f9e4851d176b4d4f76.png)

First released in 1995, [MySQL](https://www.mysql.com/) is a free and open-source software, and one of the most popular databases in the world. It is used by many high-traffic websites like Facebook and YouTube.

### PostgreSQL

![](media/6b86ee80eb59291e80aa8b0d2f4897c2.png)

Where MySQL is based on the relational model, PostgreSQL is based on the object-relational model. Another free and open-source database, PostgreSQL was released in 1996 with an emphasis on extensibility. It’s able to handle complicated data workloads due to its diversified extension functions.

## Non-Relational Databases

A **non-relational database** is any database that does not use the tabular schema of rows and columns like in relational databases. Rather, its storage model is optimized for the type of data it’s storing.

![](media/4fa0679e67d1b5057a1736cb80aec74c.png)

Non-relational databases are also known as **NoSQL databases** which stands for “Not Only SQL.” Where relational databases only use SQL, non-relational databases can use other types of query language.

## Popular Non-Relational/NoSQL Databases

### MongoDB

![](media/2cff214da2c0b7fa0d8c6b30f8c5c8f6.png)

[MongoDB](https://www.mongodb.com/) is a document store and currently the most popular NoSQL database engine in use. It uses JSON-like documents to store data and is run over multiple servers. MongoDB allows for auto-sharding which is a type of database partitioning that separates very large databases into smaller, faster, more easily managed parts called data shards.

### Redis

![](media/c05623b9a433f6d3d779b37895c68962.png)

[Redis](https://redis.io/) – Remote Dictionary Server – is a key-value store. It supports different kinds of abstract data structures such as strings, lists, maps, sets, sorted sets, and more. It’s also open-source.

## Relational vs Non-Relational Databases

To summarize the difference between the relational and non-relational databases: **relational databases store data in rows and columns like a spreadsheet while non-relational databases store data don’t, using a storage model (one of four) that is best suited for the type of data it’s storing.**

Referneces

https://insightsoftware.com/blog/whats-the-difference-relational-vs-non-relational-databases/\#:\~:text=To%20summarize%20the%20difference%20between,type%20of%20data%20it's%20storing.
