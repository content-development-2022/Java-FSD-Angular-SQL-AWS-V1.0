# Java Interface

**Content**

## 1. Interfaces

-   Another way to achieve abstraction in Java, is with interfaces.
-   An interface is a completely "**abstract class**" that is used to group related methods with empty bodies:

**Example-1:**

![](media/802125d31ba7e832d94ac10e6e90a689.png)

-   To access the interface methods, the interface must be "implemented" by another class with the **implements** keyword (instead of extends).
-   The body of the interface method is provided by the "implement" class.

**Example-2:**

![](media/c6f2dc35dd3f0f435bed90cbf20f156b.png)

**Output:**

![](media/8b4e8761ea67d4697a1cd714f53ddaf9.png)

**Notes on Interfaces:**

-   Like **abstract classes**, interfaces **cannot** be used to create objects (in the example above, it is not possible to create an "Animal" object in the MyMainClass)
-   Interface methods do not have a body - the body is provided by the "implement" class
-   On implementation of an interface, you must override all of its methods
-   Interface methods are by default abstract and public
-   Interface attributes are by default public, static and final
-   An interface cannot contain a constructor (as it cannot be used to create objects)

#### **Why And When To Use Interfaces?**

1.  To achieve security - hide certain details and only show the important details of an object (interface).
2.  Java does not support "multiple inheritance" (a class can only inherit from one superclass). However, it can be achieved with interfaces, because the class can **implement** multiple interfaces. **Note:** To implement multiple interfaces, separate them with a comma (see example below).

## Multiple Interfaces

To implement multiple interfaces, separate them with a comma:

![](media/f929499b9de75dd9169aa1fb72aff44c.png)

Output:

![](media/06f6fb64a85980f30ae72537a8e5c1f7.png)

# Difference between abstract class and interface

Abstract class and interface both are used to achieve abstraction where we can declare the abstract methods. Abstract class and interface both can't be instantiated.

But there are many differences between abstract class and interface that are given below.

![](media/fab3932e5f27153914697e3196b0aba5.png)

Simply, abstract class achieves partial abstraction (0 to 100%) whereas interface achieves fully abstraction (100%).

References

1.  <https://www.w3schools.com/java/java_interface.asp>
2.  https://www.javatpoint.com/difference-between-abstract-class-and-interface
